name: "frontend pipeline"

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: frontend
    steps:
    - uses: actions/checkout@v4
    - name: setup node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: "npm"
        cache-dependency-path: frontend/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run lint
      run: npm run lint

  test:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: frontend
    steps:
    - uses: actions/checkout@v4
    - name: setup node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: "npm"
        cache-dependency-path: backend/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm run test

  build-and-push-image:
    if: github.ref == 'refs/heads/main'
    needs: [lint, test]
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: frontend
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/amazing-race-condus/condus-frontend:latest
            ghcr.io/amazing-race-condus/condus-frontend:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/amazing-race-condus/condus-frontend:buildcache
          cache-to: type=registry,ref=ghcr.io/amazing-race-condus/condus-frontend:buildcache,mode=max